name: Build Releases

on:
  push:
    tags: ['v*']
    branches: ['cicd']
  workflow_dispatch:

jobs:
  get-version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get_version.outputs.VERSION }}
    steps:
      - uses: actions/checkout@v4

      - name: get version
        id: get_version
        run: |
          version=$(cat src/__version__.py | cut -d\" -f 2)
          echo "::set-output name=VERSION::$version"

  build:
    runs-on: ubuntu-latest
    needs: get-version
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.10.x'

      - name: install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: build executable
        run: |
          pip install pyinstaller
          pyinstaller --strip --onefile src/amanda.py

      - name: rename executable with version
        run: |
          mv dist/amanda dist/amanda-v${{ needs.get-version.outputs.version }}

      - name: upload executable
        uses: actions/upload-artifact@v4
        with:
          name: amanda_linux
          path: dist/amanda-v${{ needs.get-version.outputs.version }}

  build-win:
    runs-on: windows-latest
    needs: get-version
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.10.x'

      - name: install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: build executable
        run: |
          pip install pyinstaller
          pyinstaller --onefile src/amanda.py

      - name: rename executable with version
        run: |
          Move-Item -Path dist\amanda.exe -Destination dist\amanda-v${{ needs.get-version.outputs.version }}.exe

      - uses: actions/upload-artifact@v4
        with:
          name: amanda_win
          path: dist/amanda-v${{ needs.get-version.outputs.version }}.exe

  release:
    needs: [build, build-win]
    runs-on: ubuntu-latest
    permissions:
        contents: write
    steps:
      - uses: actions/checkout@v4

      - name: download linux build
        uses: actions/download-artifact@v4
        with:
          name: amanda_linux
          path: build/linux

      - name: download windows build
        uses: actions/download-artifact@v4
        with:
          name: amanda_win
          path: build/windows

      - name: generate release body
        run: |
          sed -n "/^## ${{ needs.get-version.outputs.version }}$/,/^## [0-9]/p" CHANGELOG.md | sed -n '$!p' \
          | sed 's/## /# /' > RELEASE.md

      - uses: ncipollo/release-action@v1
        with:
          artifacts: "**build/linux/amanda-v${{ needs.get-version.outputs.version }},**build/windows/amanda-v${{ needs.get-version.outputs.version }}.exe"
          artifactErrorsFailBuild: true
          bodyFile: "RELEASE.md"
          draft: true

